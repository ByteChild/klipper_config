##### AUTOCREATED BY KIAUH #####
[include kiauh.cfg]
[include test_probe_accuracy.cfg]
## Voron Design VORON2 300 SKR 1.4 TMC2209 UART config
##========================== Pin Definitions ========================
## X_STEP_PIN         2.2
## X_DIR_PIN          2.6
## X_ENABLE_PIN       2.1
## X_STOP_PIN         1.29
## E0_DET_PIN         1.26
## X_UART_PIN         1.10

## Y_STEP_PIN         0.19
## Y_DIR_PIN          0.20
## Y_ENABLE_PIN       2.8
## Y_STOP_PIN         1.28
## E1_DET_PIN         1.26
## Y_UART_RX          1.9

## Z_STEP_PIN         0.22
## Z_DIR_PIN          2.11
## Z_ENABLE_PIN       0.21
## Z_STOP_PIN         1.27
## PWR_DET_PIN        1.0
## Z_UART             1.8

## E0_STEP_PIN        2.13
## E0_DIR_PIN         0.11
## E0_ENABLE_PIN      2.12
## E0_UART            1.4

## E1_STEP_PIN        1.15
## E1_DIR_PIN         1.14
## E1_ENABLE_PIN      1.16
## E1_UART_RX         1.1

## HE1                2.4    
## HE0                2.7
## BED                2.5
## TH1 (H1 Temp)      0.23
## TH0 (H0 Temp)      0.24
## TB  (Bed Temp)     0.25
## FAN                2.3
## SERVO              2.0
## PROBE			      0.10
##===================================================================
[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    150,150,20  # an example

[mcu]
##	MCU for X/Y/E steppers main MCU
##	[X in X] - B Motor
##	[Y in Y] - A Motor
##	[E in E0] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_13700008881C4AAFAD80685DC42000F5-if00
##--------------------------------------------------------------------

[mcu z]
##	MCU for Z steppers
##	[Z in X] - Front Left
##	[Z1 in Y] - Rear Left
##	[Z2 in Z] - Rear Right
##	[Z3 in E0]- Front Right
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_0EB0000E47104AAF8AEE645DC32000F5-if00
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 3000    			#Max 4000
max_z_velocity: 200 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350   			#Max ?
square_corner_velocity: 5.0  #Can experiment with 8.0, default 5.0

#####################################################################
#  File location of stored varibales 
######################################################################
[save_variables]
filename: /home/pi/klipper_config/.variables.stb

#####################################################################
# Stepper Settings
#####################################################################
[include stepper.cfg]

#####################################################################
# TMC 2209 Driver Settings
#####################################################################
[include tmc.cfg]

#####################################################################
# 	Extruder & Bed Heater
#####################################################################
[include heater_extruder.cfg]

#####################################################################
# 	Probe
#####################################################################
[include probe.cfg]

#####################################################################
# 	Fan Control
#####################################################################
[include fan.cfg]

#####################################################################
# 	Temperature Sensors
#####################################################################
[include sensor.cfg]

#####################################################################
# 	LED Control
#####################################################################
[include led.cfg]

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3600

#[homing_override]
#axes: z
#set_position_z: 0
#gcode:
#   G90
#   G0 Z25 F6000
#   G28 X Y
#   G0 X206 Y303 F3600   
#   G28 Z
#   G0 Z10 F6000
#   G0 X250 Y250 Z50 F3600
   
[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions
gantry_corners:
	-60,-10
	360,370

points:
	50,25
	50,225
	250,225
	250,25

speed: 1000
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have. Display connects to Z MCU
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: z:P1.19
#sclk_pin: z:P1.20
#sid_pin: z:P1.18
#menu_timeout: 40
#encoder_pins: ^z:P3.26, ^z:P3.25 
#click_pin: ^!z:P0.28

#[output_pin beeper]
#pin: z:P1.30

#--------------------------------------------------------------------

#[display]
##	mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: z:P1.18
#a0_pin: z:P1.19
#encoder_pins: ^z:P3.25,^z:P3.26
#click_pin: ^!z:P0.28
#contrast: 63

#[neopixel fysetc_mini12864]
##	To control Neopixel RGB in mini12864 display
#pin: z:P1.21
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
# 	Macros
#####################################################################

[gcode_macro MOTORS_OFF]
gcode:
   M18

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X150 Y150 Z20 F6000
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G28                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

[virtual_sdcard]
path: /home/pi/gcode_files

[pause_resume]

[gcode_macro M600]
default_parameter_X: 50
default_parameter_Y: 0
default_parameter_Z: 150
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[display_status]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    ADD_PRINT_TIME


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_X: 230    #edit to your park position
default_parameter_Y: 230    #edit to your park position
default_parameter_Z: 10     #edit to your park position
default_parameter_E: 1      #edit to your retract length
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000
    ADD_PRINT_TIME

[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 1      #edit to your retract length
gcode:
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
    
    
[bed_mesh]
speed: 200
horizontal_move_z: 10
mesh_min: 30,30
mesh_max: 270,270
probe_count: 9,9
relative_reference_index: 40
algorithm: bicubic
bicubic_tension: 0.2
split_delta_z: 0.015

[gcode_macro BED_MESH]
gcode:
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=p1
  G1 X300 Y300 Z5 F4000
  
#####################################################################
# 	Macro
#####################################################################
## this macro adds 3 storage variables
## must be added to PRINT_END - CANCEL_PRINT Macro 
## works only with the use of virtual sd card! 
[gcode_macro ADD_PRINT_TIME]
gcode:
  ##### get saved values or initiate if not exist #####
  {% if not printer.save_variables.variables.totalprintingtime %}
    {% set totaltime = 0 %} 
  {% else %}
    {% set totaltime = printer.save_variables.variables.totalprintingtime %}
  {% endif %}
  {% if not printer.save_variables.variables.lastservicetime %}
    {% set lastservice = 0 %} 
  {% else %}
    {% set lastservice = printer.save_variables.variables.lastservicetime %}
  {% endif %}
  {% if not printer.save_variables.variables.filament_used %}
    {% set filament = 0.0 %}
  {% else %}
    {% set filament = printer.save_variables.variables.filament_used|float %}
  {% endif %}
  ##### get values of current print #####
  {% set currenttime = printer.print_stats.total_duration %}
  {% set currentprint = printer.print_stats.filament_used|float %}
  ##### Save new values #####
  SAVE_VARIABLE VARIABLE=totalprintingtime VALUE={(totaltime + currenttime)|int}
  SAVE_VARIABLE VARIABLE=lastservicetime VALUE={(lastservice + currenttime)|int}
  SAVE_VARIABLE VARIABLE=filament_used VALUE={(filament + currentprint)|float}
  DISPLAY_PRINT_TIME PREFIX=Took SECONDS={currenttime}

[gcode_macro DISPLAY_PRINT_TIME]
default_parameter_SECONDS: -1
default_parameter_PREFIX: Total
gcode:
    {% set totaltime = SECONDS|int %}
    {% if totaltime == -1 %}
        {% set totaltime = printer.save_variables.variables.totalprintingtime %}
    {% endif %}
    {% set hours = (totaltime / 3600)|int %}
    {% set minutes = ((totaltime / 60) % 60)|int %}
    {% set seconds = (totaltime % 60)|int %}
    {action_respond_info("Print time %s %d:%02d:%02d" % (PREFIX|string,hours|int,minutes|int,seconds|int))}
    M117 {PREFIX} {hours}:{'%02d' % (minutes|int)}:{'%02d' % (seconds|int)}
    #UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

[gcode_macro SD_PRINT_STATS]
gcode:
  ## output of data of the last print
  ## used at PRINT_END and CANCEL_PRINT
  {% set PT = printer.print_stats.print_duration %}
  {% set Ph = (PT / 3600)|int %}
  {% set Pm = ((PT / 60) % 60)|int %}
  {% set Ps = (PT % 60)|int %}
  {% set TT = printer.print_stats.total_duration %}
  {% set Th = (TT / 3600)|int %}
  {% set Tm = ((TT / 60) % 60)|int %}
  {% set Ts = (TT % 60)|int %}
  {% set Fil = printer.print_stats.filament_used|float / 1000.0 %}
  {action_respond_info("Statistic of last Print (%s):
                        Name: %s
                        Filament: %.4fm
                        Print Time: %d:%02d:%02d
                        Total Time: %d:%02d:%02d" %
  (params.R, printer.print_stats.filename, Fil, Ph|int, Pm|int, Ps|int, Th|int, Tm|int, Ts|int))}
  

[gcode_macro SD_PRINTER_STATS]
gcode:
  ## output data of the stoared statis
  ## use e.g at PRINT_END and CANCEL_PRINT
  {% set ST= printer.save_variables.variables.lastservicetime %}
  {% set Sh = (ST / 3600)|int %}
  {% set Sm = ((ST / 60) % 60)|int %}
  {% set Ss = (ST % 60)|int %}
  {% set TT = printer.save_variables.variables.totalprintingtime %}
  {% set Th = (TT / 3600)|int %}
  {% set Tm = ((TT / 60) % 60)|int %}
  {% set Ts = (TT % 60)|int %}
  {% set Fil = printer.save_variables.variables.filament_used|float / 1000.0 %}
  {action_respond_info("Printer Statistics:
                        Total Print Time: %d:%02d:%02d
                        Total Filament used: %.4fm
                        Time since last Service: %d:%02d:%02d" %
  (Th|int, Tm|int, Ts|int, Fil, Sh|int, Sm|int, Ss|int))}
  

### klipper display menu statistic ###
#[menu __main __statistic]
#type: list
#enable: {not printer.idle_timeout.state == "Printing"}
#name: Satistic

#[menu __main __statistic __totaltime]
#type: command
#enable: True
#name: Time of Operation
#gcode:
#  {menu.exit()}
#  _DISPLAY_PRINT_TIME PREFIX=Total SECONDS={printer.save_variables.variables.totalprintingtime}
#  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

#[menu __main __statistic __servicetime]
#type: command
#enable: True
#name: Time since Service
#gcode:
#  {menu.exit()}
#  _DISPLAY_PRINT_TIME PREFIX=Service SECONDS={printer.save_variables.variables.lastservicetime}
#  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  
#[menu __main __statistic __filament]
#type: command
#enable: True
#name: Total Filament used
#gcode:
#  {menu.exit()}
#  M117 Filerment {'%.4f' % (printer.print_stats.filament_used|float / 1000.0)}m
#  {action_respond_info("Total Filament printed: %.4fm" % (printer.print_stats.filament_used|float / 1000.0))}
#  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
    
#[menu __main __statistic __rst_service]
#type: command
#enable: True
#name: Reset Service time
#gcode:
#  {menu.exit()}
#  SAVE_VARIABLE VARIABLE=lastservicetime VALUE=0

#z_offset - Kleinerer Wert -> weiter vom Bett entfernt, größerer Wert -> näher am Bett
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 0.900
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 36.697
#*# pid_ki = 1.199
#*# pid_kd = 280.736
#*#
#*# [stepper_z]
#*# position_endstop = -0.545
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.790
#*# pid_ki = 1.164
#*# pid_kd = 132.007
